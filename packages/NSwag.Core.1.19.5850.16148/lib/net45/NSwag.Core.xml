<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NSwag.Core</name>
    </assembly>
    <members>
        <member name="T:NSwag.Collections.ObservableDictionary`2">
            <summary>An implementation of an observable dictionary.</summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
        </member>
        <member name="M:NSwag.Collections.ObservableDictionary`2.#ctor">
            <summary>Initializes a new instance of the <see cref="T:NSwag.Collections.ObservableDictionary`2"/> class. </summary>
        </member>
        <member name="M:NSwag.Collections.ObservableDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
            <summary>Initializes a new instance of the <see cref="T:NSwag.Collections.ObservableDictionary`2"/> class. </summary>
            <param name="dictionary">The dictionary to initialize this dictionary. </param>
        </member>
        <member name="M:NSwag.Collections.ObservableDictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
            <summary>Initializes a new instance of the <see cref="T:NSwag.Collections.ObservableDictionary`2"/> class. </summary>
            <param name="comparer">The comparer. </param>
        </member>
        <member name="M:NSwag.Collections.ObservableDictionary`2.#ctor(System.Int32)">
            <summary>Initializes a new instance of the <see cref="T:NSwag.Collections.ObservableDictionary`2"/> class. </summary>
            <param name="capacity">The capacity. </param>
        </member>
        <member name="M:NSwag.Collections.ObservableDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
            <summary>Initializes a new instance of the <see cref="T:NSwag.Collections.ObservableDictionary`2"/> class. </summary>
            <param name="dictionary">The dictionary to initialize this dictionary. </param>
            <param name="comparer">The comparer. </param>
        </member>
        <member name="M:NSwag.Collections.ObservableDictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
            <summary>Initializes a new instance of the <see cref="T:NSwag.Collections.ObservableDictionary`2"/> class. </summary>
            <param name="capacity">The capacity. </param>
            <param name="comparer">The comparer. </param>
        </member>
        <member name="P:NSwag.Collections.ObservableDictionary`2.Dictionary">
            <summary>Gets the underlying dictonary. </summary>
        </member>
        <member name="M:NSwag.Collections.ObservableDictionary`2.AddRange(System.Collections.Generic.IDictionary{`0,`1})">
            <summary>Adds multiple key-value pairs the the dictionary. </summary>
            <param name="items">The key-value pairs. </param>
        </member>
        <member name="M:NSwag.Collections.ObservableDictionary`2.Insert(`0,`1,System.Boolean)">
            <summary>Inserts a key-value pair into the dictionary. </summary>
            <param name="key">The key. </param>
            <param name="value">The value. </param>
            <param name="add">If true and key already exists then an exception is thrown. </param>
        </member>
        <member name="M:NSwag.Collections.ObservableDictionary`2.OnPropertyChanged(System.String)">
            <summary>Called when the property has changed.</summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:NSwag.Collections.ObservableDictionary`2.OnCollectionChanged">
            <summary>Called when the collection has changed.</summary>
        </member>
        <member name="M:NSwag.Collections.ObservableDictionary`2.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>Called when the collection has changed.</summary>
            <param name="action">The action.</param>
            <param name="changedItem">The changed item.</param>
        </member>
        <member name="M:NSwag.Collections.ObservableDictionary`2.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.Generic.KeyValuePair{`0,`1},System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>Called when the collection has changed.</summary>
            <param name="action">The action.</param>
            <param name="newItem">The new item.</param>
            <param name="oldItem">The old item.</param>
        </member>
        <member name="M:NSwag.Collections.ObservableDictionary`2.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList)">
            <summary>Called when the collection has changed.</summary>
            <param name="action">The action.</param>
            <param name="newItems">The new items.</param>
        </member>
        <member name="M:NSwag.Collections.ObservableDictionary`2.Add(`0,`1)">
            <summary>Adds the specified key.</summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:NSwag.Collections.ObservableDictionary`2.ContainsKey(`0)">
            <summary>Determines whether the specified key contains key.</summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="P:NSwag.Collections.ObservableDictionary`2.Keys">
            <summary>Gets an <see cref="T:System.Collections.Generic.ICollection`1" /> containing the keys of the <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
        </member>
        <member name="M:NSwag.Collections.ObservableDictionary`2.Remove(`0)">
            <summary>Removes the specified key.</summary>
            <param name="key">The key.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">key</exception>
        </member>
        <member name="M:NSwag.Collections.ObservableDictionary`2.TryGetValue(`0,`1@)">
            <summary>Tries the get value.</summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="P:NSwag.Collections.ObservableDictionary`2.Values">
            <summary>Gets an <see cref="T:System.Collections.Generic.ICollection`1" /> containing the values in the <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
        </member>
        <member name="P:NSwag.Collections.ObservableDictionary`2.Item(`0)">
            <summary>Gets or sets the TValue with the specified key.</summary>
            <value>The TValue.</value>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:NSwag.Collections.ObservableDictionary`2.Add(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>Adds the specified item.</summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:NSwag.Collections.ObservableDictionary`2.Clear">
            <summary>Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
        </member>
        <member name="M:NSwag.Collections.ObservableDictionary`2.Initialize(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})">
            <summary>Initializes the specified key value pairs.</summary>
            <param name="keyValuePairs">The key value pairs.</param>
        </member>
        <member name="M:NSwag.Collections.ObservableDictionary`2.Initialize(System.Collections.IEnumerable)">
            <summary>Initializes the specified key value pairs.</summary>
            <param name="keyValuePairs">The key value pairs.</param>
        </member>
        <member name="M:NSwag.Collections.ObservableDictionary`2.Contains(System.Object)">
            <summary>Determines whether [contains] [the specified key].</summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:NSwag.Collections.ObservableDictionary`2.Remove(System.Object)">
            <summary>Removes the specified key.</summary>
            <param name="key">The key.</param>
        </member>
        <member name="P:NSwag.Collections.ObservableDictionary`2.IsFixedSize">
            <summary>Gets a value indicating whether the <see cref="T:System.Collections.IDictionary" /> object has a fixed size.</summary>
        </member>
        <member name="M:NSwag.Collections.ObservableDictionary`2.Contains(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>Determines whether [contains] [the specified item].</summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:NSwag.Collections.ObservableDictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
            <summary>Copies to.</summary>
            <param name="array">The array.</param>
            <param name="arrayIndex">Index of the array.</param>
        </member>
        <member name="M:NSwag.Collections.ObservableDictionary`2.CopyTo(System.Array,System.Int32)">
            <summary>Copies to.</summary>
            <param name="array">The array.</param>
            <param name="index">The index.</param>
        </member>
        <member name="P:NSwag.Collections.ObservableDictionary`2.Count">
            <summary>Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
        </member>
        <member name="P:NSwag.Collections.ObservableDictionary`2.IsSynchronized">
            <summary>Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).</summary>
        </member>
        <member name="P:NSwag.Collections.ObservableDictionary`2.SyncRoot">
            <summary>Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</summary>
        </member>
        <member name="P:NSwag.Collections.ObservableDictionary`2.IsReadOnly">
            <summary>Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</summary>
        </member>
        <member name="M:NSwag.Collections.ObservableDictionary`2.Remove(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>Removes the specified item.</summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:NSwag.Collections.ObservableDictionary`2.GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary>
            <returns>A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.</returns>
        </member>
        <member name="E:NSwag.Collections.ObservableDictionary`2.CollectionChanged">
            <summary>Occurs when the collection has changed.</summary>
        </member>
        <member name="E:NSwag.Collections.ObservableDictionary`2.PropertyChanged">
            <summary>Occurs when a property has changed.</summary>
        </member>
        <member name="T:NSwag.HttpUtilities">
            <summary>Contains HTTP utilities.</summary>
        </member>
        <member name="M:NSwag.HttpUtilities.IsSuccessStatusCode(System.String)">
            <summary>Checks whether the given HTTP status code indicates success.</summary>
            <param name="statusCode">The HTTP status code.</param>
            <returns>true if success.</returns>
        </member>
        <member name="T:NSwag.SwaggerContact">
            <summary>The web service contact description.</summary>
        </member>
        <member name="P:NSwag.SwaggerContact.Name">
            <summary>Gets or sets the name.</summary>
        </member>
        <member name="P:NSwag.SwaggerContact.Url">
            <summary>Gets or sets the contact URL.</summary>
        </member>
        <member name="P:NSwag.SwaggerContact.Email">
            <summary>Gets or sets the contact email.</summary>
        </member>
        <member name="T:NSwag.SwaggerExternalDocumentation">
            <summary>The external documentation description.</summary>
        </member>
        <member name="P:NSwag.SwaggerExternalDocumentation.Description">
            <summary>Gets or sets the description.</summary>
        </member>
        <member name="P:NSwag.SwaggerExternalDocumentation.Url">
            <summary>Gets or sets the documentation URL.</summary>
        </member>
        <member name="T:NSwag.SwaggerHeaders">
            <summary>A collection of headers.</summary>
        </member>
        <member name="T:NSwag.SwaggerInfo">
            <summary>The web service description.</summary>
        </member>
        <member name="P:NSwag.SwaggerInfo.Title">
            <summary>Gets or sets the title.</summary>
        </member>
        <member name="P:NSwag.SwaggerInfo.Description">
            <summary>Gets or sets the description.</summary>
        </member>
        <member name="P:NSwag.SwaggerInfo.TermsOfService">
            <summary>Gets or sets the terms of service.</summary>
        </member>
        <member name="P:NSwag.SwaggerInfo.Contact">
            <summary>Gets or sets the contact information.</summary>
        </member>
        <member name="P:NSwag.SwaggerInfo.License">
            <summary>Gets or sets the license information.</summary>
        </member>
        <member name="P:NSwag.SwaggerInfo.Version">
            <summary>Gets or sets the API version.</summary>
        </member>
        <member name="T:NSwag.SwaggerLicense">
            <summary>The license information.</summary>
        </member>
        <member name="P:NSwag.SwaggerLicense.Name">
            <summary>Gets or sets the name.</summary>
        </member>
        <member name="P:NSwag.SwaggerLicense.Url">
            <summary>Gets or sets the license URL.</summary>
        </member>
        <member name="T:NSwag.SwaggerOperation">
            <summary>Describes a JSON web service operation. </summary>
        </member>
        <member name="M:NSwag.SwaggerOperation.#ctor">
            <summary>Initializes a new instance of the <see cref="T:NSwag.SwaggerOperations"/> class.</summary>
        </member>
        <member name="P:NSwag.SwaggerOperation.Parent">
            <summary>Gets the parent operations list.</summary>
        </member>
        <member name="P:NSwag.SwaggerOperation.Tags">
            <summary>Gets or sets the tags.</summary>
        </member>
        <member name="P:NSwag.SwaggerOperation.Summary">
            <summary>Gets or sets the summary of the operation.</summary>
        </member>
        <member name="P:NSwag.SwaggerOperation.Description">
            <summary>Gets or sets the long description of the operation.</summary>
        </member>
        <member name="P:NSwag.SwaggerOperation.ExternalDocumentation">
            <summary>Gets or sets the external documentation.</summary>
        </member>
        <member name="P:NSwag.SwaggerOperation.OperationId">
            <summary>Gets or sets the operation ID (unique name).</summary>
        </member>
        <member name="P:NSwag.SwaggerOperation.Schemes">
            <summary>Gets or sets the schemes.</summary>
        </member>
        <member name="P:NSwag.SwaggerOperation.Consumes">
            <summary>Gets or sets a list of MIME types the operation can consume.</summary>
        </member>
        <member name="P:NSwag.SwaggerOperation.Produces">
            <summary>Gets or sets a list of MIME types the operation can produce.</summary>
        </member>
        <member name="P:NSwag.SwaggerOperation.Parameters">
            <summary>Gets or sets the parameters.</summary>
        </member>
        <member name="P:NSwag.SwaggerOperation.Responses">
            <summary>Gets or sets the HTTP Status Code/Response pairs.</summary>
        </member>
        <member name="P:NSwag.SwaggerOperation.Deprecated">
            <summary>Gets or sets a value indicating whether the operation is deprecated.</summary>
        </member>
        <member name="P:NSwag.SwaggerOperation.Security">
            <summary>Gets or sets a security description.</summary>
        </member>
        <member name="P:NSwag.SwaggerOperation.ActualConsumes">
            <summary>Gets the list of MIME types the operation can consume, either from the operation or from the <see cref="T:NSwag.SwaggerService"/>.</summary>
        </member>
        <member name="P:NSwag.SwaggerOperation.ActualProduces">
            <summary>Gets the list of MIME types the operation can produce, either from the operation or from the <see cref="T:NSwag.SwaggerService"/>.</summary>
        </member>
        <member name="P:NSwag.SwaggerOperation.ActualSchemes">
            <summary>Gets the actual schemes, either from the operation or from the <see cref="T:NSwag.SwaggerService"/>.</summary>
        </member>
        <member name="P:NSwag.SwaggerOperation.AllParameters">
            <summary>Gets the parameters from the operation and from the <see cref="T:NSwag.SwaggerService"/>.</summary>
        </member>
        <member name="P:NSwag.SwaggerOperation.AllResponses">
            <summary>Gets the responses from the operation and from the <see cref="T:NSwag.SwaggerService"/>.</summary>
        </member>
        <member name="P:NSwag.SwaggerOperation.ActualSecurity">
            <summary>Gets the actual security description, either from the operation or from the <see cref="T:NSwag.SwaggerService"/>.</summary>
        </member>
        <member name="T:NSwag.SwaggerOperationDescription">
            <summary>Flattened information about an operation.</summary>
        </member>
        <member name="P:NSwag.SwaggerOperationDescription.Path">
            <summary>Gets the relative URL path.</summary>
        </member>
        <member name="P:NSwag.SwaggerOperationDescription.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:NSwag.SwaggerOperationDescription.Operation">
            <summary>Gets the operation.</summary>
        </member>
        <member name="T:NSwag.SwaggerOperationMethod">
            <summary>Enumeration of the available HTTP methods. </summary>
        </member>
        <member name="F:NSwag.SwaggerOperationMethod.Get">
            <summary>The HTTP GET method. </summary>
        </member>
        <member name="F:NSwag.SwaggerOperationMethod.Post">
            <summary>The HTTP POST method. </summary>
        </member>
        <member name="F:NSwag.SwaggerOperationMethod.Put">
            <summary>The HTTP PUT method. </summary>
        </member>
        <member name="F:NSwag.SwaggerOperationMethod.Delete">
            <summary>The HTTP DELETE method. </summary>
        </member>
        <member name="F:NSwag.SwaggerOperationMethod.Options">
            <summary>The HTTP OPTIONS method. </summary>
        </member>
        <member name="F:NSwag.SwaggerOperationMethod.Head">
            <summary>The HTTP HEAD method. </summary>
        </member>
        <member name="F:NSwag.SwaggerOperationMethod.Patch">
            <summary>The HTTP PATCH method. </summary>
        </member>
        <member name="T:NSwag.SwaggerParameter">
            <summary>Describes an operation parameter. </summary>
        </member>
        <member name="P:NSwag.SwaggerParameter.Name">
            <summary>Gets or sets the name.</summary>
        </member>
        <member name="P:NSwag.SwaggerParameter.Kind">
            <summary>Gets or sets the kind of the parameter.</summary>
        </member>
        <member name="P:NSwag.SwaggerParameter.IsRequired">
            <summary>Gets or sets a value indicating whether the parameter is required (default: true).</summary>
        </member>
        <member name="P:NSwag.SwaggerParameter.IsRequiredRaw">
            <summary>Gets or sets the raw required value.</summary>
        </member>
        <member name="P:NSwag.SwaggerParameter.Schema">
            <summary>Gets or sets the schema which is only available when <see cref="P:NSwag.SwaggerParameter.Kind"/> == body.</summary>
        </member>
        <member name="P:NSwag.SwaggerParameter.ActualSchema">
            <summary>Gets the actual schema, either the parameter schema itself (or its reference) or the <see cref="P:NSwag.SwaggerParameter.Schema"/> property when <see cref="P:NSwag.SwaggerParameter.Kind"/> == body.</summary>
            <exception cref="T:System.InvalidOperationException" accessor="get">The schema reference path is not resolved.</exception>
        </member>
        <member name="T:NSwag.SwaggerParameterKind">
            <summary>Enumeration of the parameter kinds. </summary>
        </member>
        <member name="F:NSwag.SwaggerParameterKind.Undefined">
            <summary>An undefined kind.</summary>
        </member>
        <member name="F:NSwag.SwaggerParameterKind.Body">
            <summary>A JSON object as POST or PUT body (only one parameter of this type is allowed). </summary>
        </member>
        <member name="F:NSwag.SwaggerParameterKind.Query">
            <summary>A query key-value pair. </summary>
        </member>
        <member name="F:NSwag.SwaggerParameterKind.Path">
            <summary>An URL path placeholder. </summary>
        </member>
        <member name="F:NSwag.SwaggerParameterKind.Header">
            <summary>A HTTP header parameter.</summary>
        </member>
        <member name="F:NSwag.SwaggerParameterKind.FormData">
            <summary>A form data parameter.</summary>
        </member>
        <member name="T:NSwag.SwaggerOperations">
            <summary>A Swagger path.</summary>
        </member>
        <member name="M:NSwag.SwaggerOperations.#ctor">
            <summary>Initializes a new instance of the <see cref="T:NSwag.SwaggerOperations"/> class.</summary>
        </member>
        <member name="P:NSwag.SwaggerOperations.Parent">
            <summary>Gets the parent <see cref="T:NSwag.SwaggerService"/>.</summary>
        </member>
        <member name="P:NSwag.SwaggerOperations.Parameters">
            <summary>Gets or sets the parameters.</summary>
        </member>
        <member name="T:NSwag.SwaggerResponse">
            <summary>The Swagger response.</summary>
        </member>
        <member name="P:NSwag.SwaggerResponse.Description">
            <summary>Gets or sets the response's description.</summary>
        </member>
        <member name="P:NSwag.SwaggerResponse.Schema">
            <summary>Gets or sets the response schema.</summary>
        </member>
        <member name="P:NSwag.SwaggerResponse.Headers">
            <summary>Gets or sets the headers.</summary>
        </member>
        <member name="T:NSwag.SwaggerResponses">
            <summary>A collection of Swagger responses.</summary>
        </member>
        <member name="T:NSwag.SwaggerSchema">
            <summary>The enumeration of Swagger protocol schemes.</summary>
        </member>
        <member name="F:NSwag.SwaggerSchema.Http">
            <summary>The HTTP schema.</summary>
        </member>
        <member name="F:NSwag.SwaggerSchema.Https">
            <summary>The HTTPS schema.</summary>
        </member>
        <member name="F:NSwag.SwaggerSchema.Ws">
            <summary>The WS schema.</summary>
        </member>
        <member name="F:NSwag.SwaggerSchema.Wss">
            <summary>The WSS schema.</summary>
        </member>
        <member name="T:NSwag.SwaggerSecurityRequirement">
            <summary>The operation security requirements.</summary>
        </member>
        <member name="T:NSwag.SwaggerSecurityScheme">
            <summary>The definition of a security scheme that can be used by the operations.</summary>
        </member>
        <member name="M:NSwag.SwaggerSecurityScheme.#ctor">
            <summary>Initializes a new instance of the <see cref="T:NSwag.SwaggerSecurityScheme"/> class.</summary>
        </member>
        <member name="P:NSwag.SwaggerSecurityScheme.Type">
            <summary>Gets or sets the type of the security scheme.</summary>
        </member>
        <member name="P:NSwag.SwaggerSecurityScheme.Description">
            <summary>Gets or sets the short description for security scheme.</summary>
        </member>
        <member name="P:NSwag.SwaggerSecurityScheme.Name">
            <summary>Gets or sets the name of the header or query parameter to be used.</summary>
        </member>
        <member name="P:NSwag.SwaggerSecurityScheme.ApiKeyLocation">
            <summary>Gets or sets the location of the API key.</summary>
        </member>
        <member name="P:NSwag.SwaggerSecurityScheme.Flow">
            <summary>Gets or sets the used by the OAuth2 security scheme.</summary>
        </member>
        <member name="P:NSwag.SwaggerSecurityScheme.AuthorizationUrl">
            <summary>Gets or sets the authorization URL to be used for this flow.</summary>
        </member>
        <member name="P:NSwag.SwaggerSecurityScheme.TokenUrl">
            <summary>Gets or sets the token URL to be used for this flow. .</summary>
        </member>
        <member name="P:NSwag.SwaggerSecurityScheme.Scopes">
            <summary>Gets the available scopes for the OAuth2 security scheme.</summary>
        </member>
        <member name="T:NSwag.SwaggerSecuritySchemeType">
            <summary></summary>
        </member>
        <member name="F:NSwag.SwaggerSecuritySchemeType.Undefined">
            <summary>The security scheme is not defined.</summary>
        </member>
        <member name="F:NSwag.SwaggerSecuritySchemeType.Basic">
            <summary>Basic authentication.</summary>
        </member>
        <member name="F:NSwag.SwaggerSecuritySchemeType.ApiKey">
            <summary>API key authentication.</summary>
        </member>
        <member name="F:NSwag.SwaggerSecuritySchemeType.OAuth2">
            <summary>OAuth2 authentication.</summary>
        </member>
        <member name="T:NSwag.SwaggerService">
            <summary>Describes a JSON web service.</summary>
        </member>
        <member name="M:NSwag.SwaggerService.#ctor">
            <summary>Initializes a new instance of the <see cref="T:NSwag.SwaggerService"/> class.</summary>
        </member>
        <member name="P:NSwag.SwaggerService.ToolchainVersion">
            <summary>Gets the NSwag toolchain version.</summary>
        </member>
        <member name="P:NSwag.SwaggerService.Swagger">
            <summary>Gets or sets the Swagger specification version being used.</summary>
        </member>
        <member name="P:NSwag.SwaggerService.Info">
            <summary>Gets or sets the metadata about the API.</summary>
        </member>
        <member name="P:NSwag.SwaggerService.Host">
            <summary>Gets or sets the host (name or ip) serving the API.</summary>
        </member>
        <member name="P:NSwag.SwaggerService.BasePath">
            <summary>Gets or sets the base path on which the API is served, which is relative to the <see cref="P:NSwag.SwaggerService.Host"/>.</summary>
        </member>
        <member name="P:NSwag.SwaggerService.Schemes">
            <summary>Gets or sets the schemes.</summary>
        </member>
        <member name="P:NSwag.SwaggerService.Consumes">
            <summary>Gets or sets a list of MIME types the operation can consume.</summary>
        </member>
        <member name="P:NSwag.SwaggerService.Produces">
            <summary>Gets or sets a list of MIME types the operation can produce.</summary>
        </member>
        <member name="P:NSwag.SwaggerService.Paths">
            <summary>Gets or sets the operations.</summary>
        </member>
        <member name="P:NSwag.SwaggerService.Definitions">
            <summary>Gets or sets the types.</summary>
        </member>
        <member name="P:NSwag.SwaggerService.Parameters">
            <summary>Gets or sets the parameters which can be used for all operations.</summary>
        </member>
        <member name="P:NSwag.SwaggerService.Responses">
            <summary>Gets or sets the responses which can be used for all operations.</summary>
        </member>
        <member name="P:NSwag.SwaggerService.SecurityDefinitions">
            <summary>Gets or sets the security definitions.</summary>
        </member>
        <member name="P:NSwag.SwaggerService.Security">
            <summary>Gets or sets a security description.</summary>
        </member>
        <member name="P:NSwag.SwaggerService.Tags">
            <summary>Gets or sets the description.</summary>
        </member>
        <member name="P:NSwag.SwaggerService.BaseUrl">
            <summary>Gets the base URL of the web service.</summary>
        </member>
        <member name="P:NSwag.SwaggerService.ExternalDocumentation">
            <summary>Gets or sets the external documentation.</summary>
        </member>
        <member name="M:NSwag.SwaggerService.ToJson">
            <summary>Converts the description object to JSON.</summary>
            <returns>The JSON string.</returns>
        </member>
        <member name="M:NSwag.SwaggerService.FromJson(System.String)">
            <summary>Creates a description object from a JSON string.</summary>
            <param name="data">The JSON data.</param>
            <returns>The <see cref="T:NSwag.SwaggerService"/>.</returns>
        </member>
        <member name="M:NSwag.SwaggerService.FromUrl(System.String)">
            <summary>Creates a description object from a JSON string.</summary>
            <param name="url">The URL.</param>
            <returns>The <see cref="T:NSwag.SwaggerService"/>.</returns>
        </member>
        <member name="P:NSwag.SwaggerService.Operations">
            <summary>Gets the operations.</summary>
        </member>
        <member name="M:NSwag.SwaggerService.GenerateOperationIds">
            <summary>Generates the missing or non-unique operation IDs.</summary>
        </member>
        <member name="T:NSwag.SwaggerTag">
            <summary>Describes a Swagger tag.</summary>
        </member>
        <member name="P:NSwag.SwaggerTag.Name">
            <summary>Gets or sets the name.</summary>
        </member>
        <member name="P:NSwag.SwaggerTag.Description">
            <summary>Gets or sets the description.</summary>
        </member>
        <member name="P:NSwag.SwaggerTag.ExternalDocumentation">
            <summary>Gets or sets the external documentation.</summary>
        </member>
    </members>
</doc>
